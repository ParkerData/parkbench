syntax = "proto3";

package parker_server;

option go_package = "pb/parker_pb";

///////////////////////////
// key value definition
///////////////////////////
message Partition {
  string partition_key = 1;
  string partition_value = 2;
}

message Key {
  oneof kind {
    int32 int32_value = 1;
    int64 int64_value = 2;
    bytes bytes_value = 3;
    string string_value = 4;
  }
}

message Value {
  oneof kind {
    bool bool_value = 1;
    int32 int32_value = 2;
    int64 int64_value = 3;
    float float_value = 4;
    double double_value = 5;
    bytes bytes_value = 6;
    string string_value = 7;
    ListValue list_value = 14;
    RecordValue record_value = 15;
  }
}
message ListValue {
  repeated Value values = 1;
}
message RecordValue {
  map<string, Value> fields = 1;
}

//////////////////////////////////////////////////

service Gateway {

  /// public Gateway API
  rpc Find (FindRequest) returns (FindResponse) {
  }

}

message FindRequest {
  string account = 1;
  string table = 2;
  repeated Partition partitions = 3;
  Key key = 4;
  string key_column = 5;
  int64 snapshot = 6; // Optional, in case customers want previous version
  repeated string columns = 10; // Optional projections, default to all columns
}

message FindResponse {
  int64 snapshot = 1;
  RecordValue record = 2;
}

